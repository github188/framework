<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-3.2.xsd
       http://mybatis.org/schema/mybatis-spring 
       http://mybatis.org/schema/mybatis-spring.xsd">

	<!-- 支持注解 -->
	<context:annotation-config />

	<!-- 注解扫描组件目录 -->
	<context:component-scan base-package="com.beyondsoft.*" />
	
	<!-- 使用CGLIB强制代理 -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>

	<!-- 全局配置 -->
	<!-- 必须放到首先位置 -->
	<bean id="app-properties-file-loader"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:config.properties</value>
				<value>classpath:db.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- 上下文容器，必须放到前面 -->
	<bean class="com.beyondsoft.framework.context.SpringApplicationContext" />

	<!-- 数据源配置 -->
	<import resource="classpath:config/db-config.xml" />

	<!-- 事务配置 -->
	<import resource="classpath:config/transaction-config.xml" />
	
	<!-- 使用spring 的 SqlSessionTemplate 创建一个 可以批量操作的sqlSession -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<!-- 采用MapperScannerConfigurer扫描 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<property name="basePackage" value="com.beyondsoft" />
		<property name="markerInterface" value="com.beyondsoft.framework.mybatis.mapper.BaseMapper"/>  
	</bean>
	
		
	<!-- 配置 mybatis 的sqlSessionFactory 由 spring 的 SqlSessionFactoryBean 代理 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="druidDataSource" />
		<property name="configLocation" value="classpath:config/mybatis-config.xml" />
		<property name="mapperLocations">
			<list>
				<value>classpath*:mapper/*Mapper.xml</value>
			</list>
		</property>
	</bean>
	
	<!-- 服务工厂 -->
	<bean id="serverFactory"
		class="com.beyondsoft.framework.thrift.server.ThriftMultiBinaryServerFactory">
		<property name="baseServiceImplPackage" value="com.beyondsoft.thrift.server.service" />
		<property name="port" value="${port.default}" />
		<property name="timeout" value="${timeout.default}" />
	</bean>

	<!-- 使用服务工厂启动服务 -->
	<bean factory-bean="serverFactory" factory-method="start" />

</beans>